import platform "ChatPlatform"

Platform SlackPlatform extends ChatPlatform

path "com.xatkit.plugins.slack.platform.SlackPlatform"

providers {
	input SlackIntentProvider {
		creates context slack with lifespan 1 {
			sets parameter channel
			sets parameter username
			sets parameter rawMessage
			sets parameter userId
			sets parameter userEmail
			sets parameter threadTs
			sets parameter messageTs
		}
	}
}

actions {
	PostMessage(message : String, channel : String, threadTs : String) : String
	PostFileMessage(message : String, file: java.io.File, channel: String)
	PostFileMessage(title : String, message : String, content : String, channel : String)
	ReplyFileMessage(message : String, file : java.io.File)
	PostAttachmentsMessage(attachments : java.util.List<com.github.seratch.jslack.api.model.Attachment>, channel : String)
	ReplyAttachmentsMessage(attachments : java.util.List<com.github.seratch.jslack.api.model.Attachment>)
	PostAttachmentsMessage(pretext : String, title : String, text : String, attchColor : String, timestamp : String, channel : String)
	ReplyAttachmentsMessage(pretext : String, title : String, text : String, attchColor : String, timestamp : String)
	PostAttachmentsMessage(pretext : String, title : String, text : String, attchColor : String, channel : String)
	ReplyAttachmentsMessage(pretext : String, title : String, text : String, attchColor : String)
	
	// Formatting actions
	// These actions do not perform operations on the Slack API, but return Strings that can be displayed as messages.
	ItemizeList(list : java.util.List<?>)
	ItemizeList(list : java.util.List<?>, formatter : String)
	EnumerateList(list : java.util.List<?>)
	EnumerateList(list : java.util.List<?>, formatter : String)
}